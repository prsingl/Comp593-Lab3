import os
import sys
from  datetime import date
import pandas as pd

def main():
    sales_csv = get_sales_csv()
    print(sales_csv)
    orders_dir = create_orders_dir(sales_csv)
    process_sales_data(sales_csv, orders_dir)

# Get path of sales data CSV file from the command line
def get_sales_csv():
    # Check whether command line parameter provided
    num_params = len(sys.argv) -1
    if num_params < 1:
        print('Error: Missing the parameter for CSV filepath')
        sys.exit(1)

    # Check whether provide parameter is valid path of file
    sales_csv_path = sys.argv[1]
    if not os.path.isfile( sales_csv_path):
        print('Error : Provider file doesnot exit in the CSV filepath')
        sys.exit(1)
    return

# Create the directory to hold the individual order Excel sheets
def create_orders_dir(sales_csv):
    # Get directory in which sales data CSV file resides
    sales_csv_path = os.path.abspath(sales_csv)
    sales_dir_path = os.path.dirname(sales_csv_path)
    # Determine the name and path of the directory to hold the order data files
    todays_date = date.today().isoformat()
    order_dir_name = f'orders'(todays_date)
    orders_dir_path = os.path.join(sales_dir_path, order_dir_name)

    # Create the order directory if it does not already exist
    if not os.path.isdir(orders_dir_path):
        os.makedirs(orders_dir_path)

    return orders_dir_path 

# Split the sales data into individual orders and save to Excel sheets
def process_sales_data(sales_csv, orders_dir):
    # Import the sales data from the CSV file into a DataFrame
    orders_dataframe = pd.read_csv(sales_csv)

    # Insert a new "TOTAL PRICE" column into the DataFrame
    orders_dataframe.insert(7,"TOTAL PRICE", orders_dataframe["ITEM QUANTITY"]*orders_dataframe["ITEM PRICE"])
    # Remove columns from the DataFrame that are not needed
    orders_dataframe.drop(coloumns= ["ADDRESS","CITY","STATE"], inplace = True)

    # Group the rows in the DataFrame by order ID
    for oid, oid_df in orders_dataframe.groupby("ORDER ID"):
    # For each order ID:
        # Remove the "ORDER ID" column
        oid_df.drop(columns=["ORDER ID"], inplace=True)
        oid_df.sort_values(by="ITEM NUMBER", inplace= True)
        # Sort the items by item number

        # Append a "GRAND TOTAL" row
        grand_total =oid_df["TOTAL PRICE"].sum()
        grand_total_df =pd.DataFramde({'ITEM PRICE': ['GRAND TOTAL:'],'TOTAL PRICE':[grand_total]})
        oid_df = oid_df.append(grand_total_df, ignore_index=True)

        # Determine the file name and full path of the Excel sheet
        file_name = f'order_{oid}.xlsx'
        file_path = os.path.join(orders_dir, file_name)
        

        # Export the data to an Excel sheet
        sheet_name = f'{oid}'
        oid_df.to_excel(file_path, index=False, sheet_name=sheet_name)

        # TODO: Format the Excel sheet
    pass

if __name__ == '__main__':
    main()